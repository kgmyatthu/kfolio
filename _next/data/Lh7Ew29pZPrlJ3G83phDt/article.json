{"pageProps":{"tags":[{"id":1,"name":"cryptography"},{"id":2,"name":"algorithm"},{"id":3,"name":"math"}],"articles":[{"title":"hello world","slug":"hello-world","date":"2022-05-13T00:00:00.000Z","body":"# Table of Contents plugin for Rehype\nA [rehype](https://github.com/rehypejs/rehype) plugin that adds a table of contents (TOC) to the page\n\n[![Cross-Platform Compatibility](https://jstools.dev/img/badges/os-badges.svg)](https://github.com/JS-DevTools/rehype-toc/actions)\n[![Build Status](https://github.com/JS-DevTools/rehype-toc/workflows/CI-CD/badge.svg)](https://github.com/JS-DevTools/rehype-toc/actions)\n\n[![Coverage Status](https://coveralls.io/repos/github/JS-DevTools/rehype-toc/badge.svg?branch=master)](https://coveralls.io/github/JS-DevTools/rehype-toc)\n[![Dependencies](https://david-dm.org/JS-DevTools/rehype-toc.svg)](https://david-dm.org/JS-DevTools/rehype-toc)\n\n[![npm](https://img.shields.io/npm/v/@jsdevtools/rehype-toc.svg)](https://www.npmjs.com/package/@jsdevtools/rehype-toc)\n[![License](https://img.shields.io/npm/l/@jsdevtools/rehype-toc.svg)](LICENSE)\n[![Buy us a tree](https://img.shields.io/badge/Treeware-%F0%9F%8C%B3-lightgreen)](https://plant.treeware.earth/JS-DevTools/rehype-toc)\n\n\n\nFeatures\n--------------------------\n- Adds a `<nav>` and `<ol>` list outlining all headings on the page\n- Combine with [rehype-slug](https://github.com/rehypejs/rehype-slug) to create links to each heading\n- Ignores headings outside of `<main>` if it exists\n- You can customize which headings are included (defaults to `<h1>` - `<h6>`)\n- You can customize the CSS classes on every TOC element\n- Hooks give you complete customization of the generated HTML\n\n\n\nExample\n--------------------------\n\n**input.html**<br>\nHere's the original HTML file. There are three levels of headings (`<h1>` - `<h3>`), and none of them have IDs.\n\n```html\n<html>\n  <body>\n    <h1>Apple Pie Recipe</h1>\n    <p>This is the world's best apple pie recipe...</p>\n\n    <div>\n      <h2>Filling</h2>\n      <p>The filling is the best part...</p>\n\n      <h3>Preparing the apples</h3>\n      <p>Cut the apples into 1/4 inch slices...</p>\n\n      <h3>Preparing the spice mix</h3>\n      <p>In a mixing bowl, combine sugar, cinnamon...</p>\n    </div>\n\n    <div>\n      <h2>Crust</h2>\n      <p>How to make the perfect flaky crust...</p>\n\n      <h3>Preparing the dough</h3>\n      <p>Combine flour, sugar, salt...</p>\n\n      <h3>The criss-cross top</h3>\n      <p>Cut the top crust into 1/2 inch strips...</p>\n    </div>\n  </body>\n</html>\n```\n\n**example.js**<br>\nThis script reads the `input.html` file above writes the results to `output.html` (shown below). The script uses [unified](https://unifiedjs.com/), [rehype-parse](https://github.com/rehypejs/rehype/tree/master/packages/rehype-parse), [rehype-slug](https://github.com/rehypejs/rehype-slug), and [rehype-stringify](https://github.com/rehypejs/rehype/tree/master/packages/rehype-stringify).\n\n\n```diff\nconst unified = require(\"unified\");\nconst parse = require(\"rehype-parse\");\nconst slug = require(\"rehype-slug\");\nconst toc = require(\"@jsdevtools/rehype-toc\");\nconst stringify = require(\"rehype-stringify\");\nconst fs = require(\"fs\");\n\nasync function example() {\n  // Create a Rehype processor with the TOC plugin\n  const processor = unified()\n    .use(parse)\n+    .use(slug)\n-    .use(toc)\n    .use(stringify);\n\n  // Read the original HTML file\n  let inputHTML = await fs.promises.readFile(\"input.html\");\n\n  // Process the HTML, adding heading IDs and Table of Contents\n  let outputHTML = await processor.process(inputHTML);\n\n  // Save the new HTML\n  await fs.promises.writeFile(\"output.html\", outputHTML);\n}\n```\n\n**output.html**<br>\nHere's the HTML that gets created by the above script. Notice that a table of contents has been added at the top of the `<body>`, with links to each of the headings on the page. The headings also now have IDs, thanks to [rehype-slug](https://github.com/rehypejs/rehype-slug).\n\n```html\n<html>\n  <body>\n    <nav class=\"toc\">\n      <ol class=\"toc-level toc-level-1\">\n        <li class=\"toc-item toc-item-h1\">\n          <a class=\"toc-link toc-link-h1\" href=\"#apple-pie-recipe\">\n            Apple Pie Recipe\n          </a>\n\n          <ol class=\"toc-level toc-level-2\">\n            <li class=\"toc-item toc-item-h2\">\n              <a class=\"toc-link toc-link-h2\" href=\"#filling\">\n                Filling\n              </a>\n\n              <ol class=\"toc-level toc-level-3\">\n                <li class=\"toc-item toc-item-h3\">\n                  <a class=\"toc-link toc-link-h3\" href=\"#preparing-the-apples\">\n                    Preparing the apples\n                  </a>\n                </li>\n                <li class=\"toc-item toc-item-h3\">\n                  <a class=\"toc-link toc-link-h3\" href=\"#preparing-the-spice-mix\">\n                    Preparing the spice mix\n                  </a>\n                </li>\n              </ol>\n            </li>\n\n            <li class=\"toc-item toc-item-h2\">\n              <a class=\"toc-link toc-link-h2\" href=\"#crust\">\n                Crust\n              </a>\n\n              <ol class=\"toc-level toc-level-3\">\n                <li class=\"toc-item toc-item-h3\">\n                  <a class=\"toc-link toc-link-h3\" href=\"#preparing-the-dough\">\n                    Preparing the dough\n                  </a>\n                </li>\n                <li class=\"toc-item toc-item-h3\">\n                  <a class=\"toc-link toc-link-h3\" href=\"#the-criss-cross-top\">\n                    The criss-cross top\n                  </a>\n                </li>\n              </ol>\n            </li>\n          </ol>\n        </li>\n      </ol>\n    </nav>\n\n    <h1 id=\"apple-pie-recipe\">Apple Pie Recipe</h1>\n    <p>This is the world's best apple pie recipe...</p>\n\n    <div>\n      <h2 id=\"filling\">Filling</h2>\n      <p>The filling is the best part...</p>\n\n      <h3 id=\"preparing-the-apples\">Preparing the apples</h3>\n      <p>Cut the apples into 1/4 inch slices...</p>\n\n      <h3 id=\"preparing-the-spice-mix\">Preparing the spice mix</h3>\n      <p>In a mixing bowl, combine sugar, cinnamon...</p>\n    </div>\n\n    <div>\n      <h2 id=\"crust\">Crust</h2>\n      <p>How to make the perfect flaky crust...</p>\n\n      <h3 id=\"preparing-the-dough\">Preparing the dough</h3>\n      <p>Combine flour, sugar, salt...</p>\n\n      <h3 id=\"the-criss-cross-top\">The criss-cross top</h3>\n      <p>Cut the top crust into 1/2 inch strips...</p>\n    </div>\n  </body>\n</html>\n```\n\n\n\nInstallation\n--------------------------\nYou can install Rehype TOC via [npm](https://docs.npmjs.com/about-npm/).\n\n```bash\nnpm install @jsdevtools/rehype-toc\n```\n\nYou'll probably want to install [unified](https://unifiedjs.com/), [rehype-parse](https://github.com/rehypejs/rehype/tree/master/packages/rehype-parse), [rehype-stringify](https://github.com/rehypejs/rehype/tree/master/packages/rehype-stringify), and [rehype-slug](https://github.com/rehypejs/rehype-slug) as well.\n\n```bash\nnpm install unified rehype-parse rehype-stringify rehype-slug\n```\n\n\n\nUsage\n--------------------------\nUsing the Rehype TOC plugin requires an understanding of how to use Unified and Rehype. [Here is an excelleng guide](https://unifiedjs.com/learn/guide/introduction-to-unified/) to learn the basics.\n\nThe Rehype TOC plugin works just like any other Rehype plugin. Pass it to [the `.use()` method](https://github.com/unifiedjs/unified#processoruseplugin-options), optionally with an [options object](#options).\n\n```javascript\nconst unified = require(\"unified\");\nconst toc = require(\"@jsdevtools/rehype-toc\");\n\n// Use the Rehype TOC plugin with its default options\nunified().use(toc);\n\n// Use the Rehype TOC plugin with custom options\nunified().use(toc, {\n  headings: [\"h1\", \"h2\"],     // Only include <h1> and <h2> headings in the TOC\n  cssClasses: {\n    toc: \"page-outline\",      // Change the CSS class for the TOC\n    link: \"page-link\",        // Change the CSS class for links in the TOC\n  }\n});\n```\n\n\n\nOptions\n--------------------------\nThe Rehype TOC plugin supports the following options:\n\n|Option                |Type                |Default                |Description\n|:---------------------|:-------------------|:----------------------|:-----------------------------------------\n|`nav`                 |boolean             |true                   |Determines whether the table of contents is wrapped in a `<nav>` element.\n|`position`            |string              |\"afterbegin\"           |The position at which the table of contents should be inserted, relative to the `<main>` or `<body>` element. Can be \"beforebegin\", \"afterbegin\", \"beforeend\", or \"afterend\". See [the `insertAdjacentElement()` docs](https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement) for an explanation of each value.\n|`headings`            |array of strings    |h1, h2, h3, h4, h5, h6 |The HTML heading tags to include in the table of contents\n|`cssClasses.toc`      |string              |toc                    |The CSS class name for the top-level `<nav>` or `<ol>` element that contains the whole table of contents.\n|`cssClasses.list`     |string              |toc-level              |The CSS class name for all `<ol>` elements in the table of contents, including the top-level one.\n|`cssClasses.listItem` |string              |toc-item               |The CSS class name for all `<li>` elements in the table of contents.\n|`cssClasses.link`     |string              |toc-link               |The CSS class name for all `<a>` elements in the table of contents.\n|`customizeTOC`        |function(toc)       |                       |Allows you to customize the table of contents before it is added to the page.<br><br>The function receives the TOC node tree and can modify it in any way you want. Or you can return a new node tree to use instead. Or return `false` to prevent the the TOC from being added to the page.\n|`customizeTOCItem`    |function(toc, heading)|                     |Allows you to customize each item in the table of contents before it is added to the page.<br><br>The function receives the TOC item's node tree and the heading node that it refers to. You can modify the nodes in any way you want. Or you can return a new node tree to use instead. Or return `false` to prevent the the TOC from being added to the page.\n\n\n\nContributing\n--------------------------\nContributions, enhancements, and bug-fixes are welcome!  [Open an issue](https://github.com/JS-DevTools/rehype-toc/issues) on GitHub and [submit a pull request](https://github.com/JS-DevTools/rehype-toc/pulls).\n\n#### Building\nTo build the project locally on your computer:\n\n1. __Clone this repo__\n\n`git clone https://github.com/JS-DevTools/rehype-toc.git`\n\n2. __Install dependencies__\n\n`npm install`\n\n3. __Build the code__\n`npm run build`\n\n4. __Run the tests__\n\n`npm test`\n\n\n**The Cauchy-Schwarz Inequality**\n\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\n\n\nLift($L$) can be determined by Lift Coefficient ($C_L$) like the following\nequation.\n\n$$\nL = \\frac{1}{2} \\rho v^2 S C_L\n$$\n\n> \"make it work, make it right, make it fast\"\n\n\nLicense\n--------------------------\nRehype TOC is 100% free and open-source, under the [MIT license](LICENSE). Use it however you want.\n\nThis package is [Treeware](http://treeware.earth). If you use it in production, then we ask that you [**buy the world a tree**](https://plant.treeware.earth/JS-DevTools/rehype-toc) to thank us for our work. By contributing to the Treeware forest you’ll be creating employment for local families and restoring wildlife habitats.\n\n\n\nBig Thanks To\n--------------------------\nThanks to these awesome companies for their support of Open Source developers ❤\n\n[![Travis CI](https://jstools.dev/img/badges/travis-ci.svg)](https://travis-ci.com)\n[![SauceLabs](https://jstools.dev/img/badges/sauce-labs.svg)](https://saucelabs.com)\n[![Coveralls](https://jstools.dev/img/badges/coveralls.svg)](https://coveralls.io)\n","tags":["cryptography","algorithm"]},{"title":"understanding the fundamental of the summation symbol sigma in mathematic","slug":"understanding-the-fundamental-of-the-summation-symbol-sigma-in-mathematic","date":"2022-09-13T00:00:00.000Z","body":"\n# Summation Symbol ($\\sum$)\nIn mathematic the summation symbol capital sigma is generally used to reqpresents summation of similar terms.\n\n# Simple Sum\nFor example, adding a sequence of number up to the n number starting from 1 can be compactly describe in this manner:\n\n$$\n\\begin{aligned}\n  \\sum_{i=1}^n i = 1 + 2 + 3 + ... + n \\\\\n  \\text{where,} \\\\\n  \\text{i = lowerbound of the summation} \\\\ \n  \\text{n = upperbound of the summation}\n\\end{aligned}\n$$\n\n\nMore generally, the expression $\\sum_{i=1}^n x_i$ represents the sum of n terms\n\n$$\n  x_1 + x_2 + x_3 + ... + x_n\n$$\n\nA few more examples:\n\n$$\n\\begin{aligned}\n  \\sum_{i=1}^n 4x_i  &= 4x_1 + 4x_2 + 4x_3 + ... + 4x_n \\\\ \n                     &= 4(x_1 + x_2 + x_3 + ... + x_n)\n\\end{aligned}\n$$\nThus,\n$$\n  \\sum_{i=1}^n 4x_i  = 4(\\sum_{i=1}^n x_i)\n$$\n\nAnother example:\n\n$$\n\\begin{aligned}\n  \\sum_{i=1}^3 (x_i+y_i) &= (x_1 + y_1) + (x_2 + y_2) + (x_3 + y_3)  \\\\\n                          &= x_1 + x_2 + x_3 + y_1 + y_2 + y_3\n\\end{aligned}\n$$\n\nThus,\n\n$$\n  \\sum_{i=1}^n (x_i+y_i)   = \\sum_{i=1}^n x_i + \\sum_{i=1}^n y_i\n$$\n\n## Attention\nWe must not confund the following expressions pairs. Because the expression:\n\n$$\n  \\sum_{i=1}^n x_iy_i\n$$\n\nis not the same as:\n\n$$\n  (\\sum_{i=1}^n x_i)(\\sum_{i_1}^n y_i)\n$$\n\nAnd the expression\n\n$$\n  \\sum_{i=1}^n x_i^2\n$$\n\nis not the same as:\n\n$$\n  (\\sum_{i=1}^n x_i)^2\n$$\n\nLet's explorer further on why that is by subsituting some arbitrary numbers into the variables.\n\nFor example, given $i=1$, $n = 3$, $x_1 = 4$, $x_2 = 2$, $x_3 = 7$ and $y_1 = 2$, $y_2 = 2$, $y_3 = 3$:\n\nConclusion 1,\n\n$$\n\\begin{aligned}\n  \\sum_{i=1}^n x_iy_i &\\neq (\\sum_{i=1}^n x_i)(\\sum_{i=1}^n y_i) \\\\\n    x_1 y_1 + x_2 y_2 + x_3 y_3 &\\neq (x_1 + x_2 + x_3)(y_1 + y_2 + y_3) \\\\\n    (4*2) + (2*2) + (7*3) &\\neq (4+2+7) *(2+2+3) \\\\ \n                    31  &\\neq 91\n\\end{aligned}\n$$\n\nConclusion 2,\n\n$$\n\\begin{aligned}\n  \\sum_{i=1}^n x_i^2        &\\neq (\\sum_{i=1}^n x_i)^2 \\\\\n    x_1^2  + x_2^2  + x_3^2 &\\neq (x_1 + x_2 + x_3)^2 \\\\\n    4^2 + 2^2 + 7^2         &\\neq (4+2+7)^2 \\\\ \n                    69      &\\neq 169\n\\end{aligned}\n$$\n\n# Double Sums\nSummation doubles are just simply summation of a summation, the below expression are the ones you'll likely encounter when you're dealing with double sums.\n\nThe basic double sum expression:\n\n$$\n\\begin{aligned}\n \\sum_{i=1}^m x_i \\sum_{j=1}^n y_j &= \\sum_{i=1}^m \\sum_{j=1}^n x_i y_j\n\\end{aligned}\n$$\n\nLet's replace some arbitrary numbers into upperbounds of the summations to explore them:\n\n$$\n\\begin{aligned}\n \\sum_{i=1}^3 \\sum_{j=1}^2 x_i y_j &= \\sum_{i=1}^3 (x_iy_1 + x_iy_2) \\\\\n                                   &= x_1y_1 + x_1y_2 + x_2y_1 + x_2y_2 +x_3y_1 + x_3y_2\n\\end{aligned}\n$$\n\nLess general case:\n\n$$\n\\begin{aligned}\n(\\sum_{i=1}^n x_i)^2 &= \\sum_{i=1}^n x_i \\sum_{j=1}^n x_j \\\\\n                      &= \\sum_{i=1}^n \\sum_{j=1}^n x_i x_j \\\\\n                      &= \\sum_{i=1}^n x_i^2 + \\sum_{i=1}^n \\sum_{j=1}^n x_i x_j (j\\neq i)\n\\end{aligned}\n$$\n\nExplanations for above relations with an example of $n=3$:\n\nLet's sort out the  $(\\sum_{i=1}^3 x_i)^2$ first:\n\n$$\n\\begin{aligned}\n(\\sum_{i=1}^3 x_i)^2  &= (x_1+x_2+x_3)^2 \\\\ \n                        &= (x_1^2 + x_2^2 + x_3^2)+(2x_1x_2 + 2x_1x_3 + 2x_2x_3) \\\\\n                        &= x_1^2 + x_2^2 + x_3^2+x_1x_2 + x_1x_3 + x_2x_3 + x_1x_2 + x_1x_3 + x_2x_3\n\\end{aligned}\n$$\n\nExploring relation 1:\n\n$$\n\\begin{aligned}\n\\sum_{i=1}^3 x_i \\sum_{j=1}^3 x_j   &= (x_1+x_2+x_3)(x_1+x_2+x_3) \\\\\n                        &= x_1^2 + x_2^2 + x_3^2+x_1x_2 + x_1x_3 + x_2x_3 + x_1x_2 + x_1x_3 + x_2x_3\n\\end{aligned}\n$$\n\nExploring relation 2:\n\n$$\n\\begin{aligned}\n\\sum_{i=1}^3 \\sum_{j=1}^3 x_i x_j   &= \\sum_{i=1}^3 (x_ix_1 + x_ix_2 + x_ix_3) \\\\\n  &= (x_1x_1 + x_1x_2 + x_1x_3) + (x_2x_1 + x_2x_2 + x_2x_3) +(x_3x_1 + x_3x_2 + x_3x_3) \\\\\n  &= x_1^2 + x_2^2 + x_3^2+x_1x_2 + x_1x_3 + x_2x_3 + x_1x_2 + x_1x_3 + x_2x_3\n\\end{aligned}\n$$\n\nExplanation for last relation:\n\n$$\n\\begin{aligned}\n\\sum_{i=1}^3 x_i^2 + \\sum_{i=1}^3 \\sum_{j=1}^n x_i x_j (i \\neq j)\n&= (x_1^2 + x_2^2 + x_3^2 ) + x_1(x_2+x_3) + x_2(x_1+x_3) + x_3(x_1+x_2) \\\\\n  &= x_1^2 + x_2^2 + x_3^2+x_1x_2 + x_1x_3 + x_2x_3 + x_1x_2 + x_1x_3 + x_2x_3\n\\end{aligned}\n$$\n\nThere are few other complex double sums examples but we'll not dive into them in this article.\n\n# Double Index\nSometime in computer science and afew other areas where we need to represent the data of a table or a matrix. In the following example we'll explorer double index notations where in $x_ij$ the first index (i) represent the number of the row where the data is located and the second (j) to the column.\n> $x_{49}$ represents the data at row 4 and column 9\n\nExample:\n\n  Given\n\n$$\n\\begin{aligned}\n  x_{11} = 2, x_{12} = 4, x_{13} = 5, x_{14} = 1 \\\\\n  x_{21} = 1, x_{22} = 8, x_{23} = 3,  x_{24} = 2 \\\\\n  x_{31} = 11, x_{32} = 9, x_{33} = 2, x_{34} = 3\n\\end{aligned}\n$$\n\nLet's visualize the data with a table.\n\n| x         | $x_{j=1}$   | $x_{j=2}$   | $x_{j=3}$ | $x_{j=4}$ |\n|-----------|-------------|-------------|-----------|-----------|\n| $x_{i=1}$ | 2           | 4           | 5         | 1         |\n| $x_{i=2}$ | 1           | 8           | 3         | 2         |\n| $x_{i=3}$ | 11          | 9           | 2         | 3         |\n\nTo figure out the sum of the terms of a row, we fix the index of the row and vary for all possible values, the index of the column.\n\nFor exmaple:\n\n$$\n\\sum_{j=1}^3 x_{1j} = x_{11} + x_{12} + x_{13} + x_{14} = 2 + 4 + 5 + 1 = 12\n$$\n\nTo carry out the summation of the whole of the table, we vary both indices and use double sum:\n\n$$\n\\begin{aligned}\n  \\sum_{i=1}^3 \\sum_{j=4}^4 &= \\sum_{i=3}^3 x_{i1} +x_{i2} +x_{i3} +x_{i4}  \\\\\n  &= x_{11} + x_{12} + x_{13} + x_{14} + x_{21} + x_{22} + x_{23} + x_{24} + x_{31} + x_{32} + x_{33} + x_{34} \\\\\n  &= 2 + 4 + 5 + 1 + 1 + 8 + 3 + 2 + 11 + 9 + 2 + 3  \\\\\n  &= 51\n\\end{aligned}\n$$\n\n\n\n","tags":["math"]}]},"__N_SSG":true}